$date
	Mon Mar 20 22:39:42 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module OSPE_TB $end
$var wire 32 ! opC [31:0] $end
$var wire 32 " opB [31:0] $end
$var wire 32 # opA [31:0] $end
$var reg 1 $ clk $end
$var reg 32 % ipA [31:0] $end
$var reg 32 & ipB [31:0] $end
$var reg 1 ' rstnPipe $end
$var reg 1 ( rstnPsum $end
$scope module instance1 $end
$var wire 1 $ clk $end
$var wire 32 ) ipA [31:0] $end
$var wire 32 * ipB [31:0] $end
$var wire 32 + opA [31:0] $end
$var wire 32 , opB [31:0] $end
$var wire 1 ' rstnPipe $end
$var wire 1 ( rstnPsum $end
$var wire 32 - opC_wire [31:0] $end
$var wire 32 . opC [31:0] $end
$var reg 32 / tempA [31:0] $end
$var reg 32 0 tempB [31:0] $end
$var reg 32 1 tempC [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 1
b0 0
b0 /
b0 .
b0 -
b0 ,
b0 +
b0 *
b0 )
0(
0'
b0 &
b0 %
1$
b0 #
b0 "
b0 !
$end
#1
0$
#2
1$
1(
1'
#3
0$
#4
b1 "
b1 ,
b1 0
b1 #
b1 +
b1 /
b1 !
b1 .
b1 1
1$
b10 -
b1 &
b1 *
b1 %
b1 )
#5
0$
#6
b0 "
b0 ,
b0 0
b0 #
b0 +
b0 /
1$
b0 &
b0 *
b1 -
b0 %
b0 )
#7
0$
#8
1$
0'
#9
0$
#10
1$
#11
0$
#12
1$
#13
0$
#14
1$
#15
0$
#16
$dumpoff
bx 1
bx 0
bx /
bx .
bx -
bx ,
bx +
bx *
bx )
x(
x'
bx &
bx %
x$
bx #
bx "
bx !
$end
